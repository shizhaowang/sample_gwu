# flash file for a 1d, 2d, or 3d cellular detonation of carbon
# [source/Simulations/setups/Cellular]

# max and min levels of refinement
# 5 levels puts about 10 mesh points per burning length scale, and is about 
# as crude a mesh as one dares to go. in 3d this is the most refinement
# levels i've run with. in 2d the most i've run it with is 8 levels in 2d, 
# which makes some really great pictures.

lrefine_max = 5
lrefine_min = 1

# refine on the pressure and density
refine_var_1 = "pres"
refine_var_2 = "dens"
refine_var_3 = "none"
refine_var_4 = "none"

# refine on the temperature too
#refine_var_1 = "pres"
#refine_var_2 = "dens"
#refine_var_3 = "temp"
#refine_var_4 = "none"

# names of files
basenm   = "c_"
log_file = "c.log"


# for starting a new run
restart  = .false.
cpnumber = 0
ptnumber = 0

# specify the plot variables
plot_var_1 = "pres"
plot_var_2 = "si28"

# for restarting an old one
#restart  = .true.
#cpnumber = 57
#ptnumber = 125


# dump checkpoint files every trstrt seconds
trstrt   = 5.0e-9
#trstrt   = 1.0d8

# dump plot files every tplot seconds
#tplot    = 0.25e-9
tplot    = 1.0e8

# go for nend steps or tmax seconds, whichever comes first
nend     = 10000
tmax     = 10000.



# initial and minimum 
dtini = 1.0e-16
dtmin = 1.0e-20

# for fine time slices, you may want to limit the timestep
#dtmax = 0.0125e-9


# cfl limit, ni56 burner cutoff, artificial viscosity, smallest density
# allowed, and smallest temperature allowed
cfl = .8
ni56max = 1.0
cvisc = 0.1
smlrho = 1.e-2
smallt = 1.e5


# choose integration method 1 = bader-deuflhard, 2 = rosenbrock
# rosenbrock is faster under some circumstances.
# until i test it some more, i'll stick with the bader-deuflhard.

ode_steper = 1


# choose linear algebra package 1 = ma28, 2 = gift
# gift is faster under some circumstances, and this problem
# satisfies those conditions. either package will get the right answer.

algebra = 2


# control when the burner is called, dont call it in the cold stuff
tnucmin = 2.1e8
tnucmax = 1.0e12 
dnucmin = 1.0e-10
dnucmax = 1.0e14


# set the composition
xhe4 = 0.0
xc12 = 1.0
xo16 = 0.0


# upstream fuel conditions for pure carbon
t_ambient   = 2.0e8
rho_ambient = 1.0e7
v_ambient   = 0.0e0


# these are the fuel conditions, for a self-sustained detonation
# at the upstream conditions, just after the shock has passed
# these values from /f1/fxt/flam/cjdet/cjdet.exe

t_perturb   = 4.423e9
rho_perturb = 4.236e7
v_perturb   = 2.876E+08


# seed the density perturbations with white-noise
noise_ampl = 1.0e-2
noise_dist = 5.0


# physical domain
xmin = 0.0
xmax = 256.
ymin = 0.0
ymax = 12.8
zmin = 0.0
zmax = 12.8


# put 20 blocks in the x-direction, this will give square grids
nblockx = 20
nblocky = 1
nblockz = 1


# apply the jump conditions below a distance of r_init
r_init = 25.6
xctr = 0.
yctr = 0.
zctr = 0.
pseudo_1d = .true.



# cartesian geometry
geometry = "cartesian"

# reflecting east and west boundaries
xl_boundary_type = "reflect"
xr_boundary_type = "reflect"

# periodix north and south boundaries
yl_boundary_type = "periodic"
yr_boundary_type = "periodic"

# periodic up and down boundaries
zl_boundary_type = "periodic"
zr_boundary_type = "periodic"


# no gravity, but do burn
igrav = 0
iburn = 1
useShockBurn = 1
ichem = 0



eintSwitch     = 1.e-4
