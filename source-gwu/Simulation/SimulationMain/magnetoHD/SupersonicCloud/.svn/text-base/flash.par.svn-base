# 	Runtime parameters for the MHD Cloud-shock interaction problem.

#	Specific heats ratio
gamma		= 1.66666666666666667


#       Grid dimensionality and geometry
geometry	= "cartesian"


#       Size of computational volume
xmin		=  0.
xmax		=  10.
ymin		=  -5.
ymax		=   5.
zmin		=  0.
zmax		=  0.

#       Boundary conditions
xl_boundary_type = "user"
xr_boundary_type = "outflow"
yl_boundary_type = "outflow"
yr_boundary_type = "outflow"
zl_boundary_type = "outflow"
zr_boundary_type = "outflow"


#	Parameters for initial model
#	Density, pressure, velocity and magnetic field
#	initial values on either side of the interface
d_ambient	= 1.
p_ambient	= 1.
u_ambient	= 10.
v_ambient	= 0.
w_ambient	= 0.
bx_ambient	= 0.55
by_ambient	= 0.
bz_ambient	= 0.

cloudRadius	= 1.0
cloudXCtr	= 1.5
cloudYCtr	= 0.0
cloudZCtr	= 0.0
cloudDensity	= 10. #chi

#       Simulation (grid, time, I/O) parameters
run_comment	= "Supersonic Cloud problem"
log_file	= "supersonicCloud.log"
basenm		= "supersonicCloud_"
restart         = .false.
#checkPointFileNumber=0
#plotFileNumber  = 0
nend            = 10000000
tmax            = 6.
cfl             = 0.6
plot_var_1	= "dens"

convertToConsvdInMeshInterp = .true.
checkpointFileIntervalTime = 0.05
#checkpointFileIntervalStep = 5


#	AMR parameters
#nblockx	= 2
#nblocky	= 2
#nblockz	= 2

lrefine_min	= 1
lrefine_max     = 4
nrefs           = 2
refine_var_1    = "dens"
refine_var_2	= "pres"
eintSwitch	= 1.e-6


#	DivB control switch
killdivb	= .true.

#	Flux Conservation for AMR
flux_correct    = .true.


## -------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE UNSPLIT STAGGERED MESH MHD SOLVER  ##
#	I. INTERPOLATION SCHEME:
order		= 3      # Interpolation order (First/Second order)
slopeLimiter    = "mc"   # Slope limiters (minmod, mc, vanLeer, hybrid, limited)
LimitedSlopeBeta= 1.     # Slope parameter for the "limited" slope by Toro
charLimiting	= .true. # Characteristic limiting vs. Primitive limiting
use_steepening	= .true.
use_flattening	= .false.
use_upwindTVD	= .false.

#	II. MAGNETIC(B) AND ELECTRIC(E) FIELDS:
E_modification	= .true.           # High order algorithm for E-field construction
energyFix	= .false.           # Update magnetic energy using staggered B-fields
ForceHydroLimit	= .false.          # Pure Hydro Limit (B=0)
prolMethod      = "injection_prol" # Prolongation method (injecton_prol, balsara_prol)


#	III. RIEMANN SOLVERS:
RiemannSolver	= "hlld"       # Roe, HLL, HLLC, HLLD, LF
shockInstabilityFix = .false. # Carbuncle instability fix for the Roe solver
entropy         = .false.     # Entropy fix for the Roe solver
EOSforRiemann	= .false.

#	IV. STRONG SHOCK HANDELING SCHEME:
shockDetect	= .false.     # Shock Detect for numerical stability
## -------------------------------------------------------------##



#	The parameters below are only necessary for the Uniform Grid
iGridSize	= 200	#defined as nxb * iprocs
jGridSize	= 200	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 2	#number or procs in the i direction
jProcs		= 2	#number or procs in the j direction
kProcs		= 1	#number or procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
