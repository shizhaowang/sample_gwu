#	Runtime parameters for the Brio-Wu MHD shock-tube problem.

#	Specific heats ratio
gamma		= 2.0


#       Grid dimensionality and geometry
geometry	= "cartesian"


#	Size of computational volume
xmin		= 0.
xmax		= 1.
ymin		= 0.
ymax		= 1.


#	Boundary conditions
xl_boundary_type = "outflow"
xr_boundary_type = "outflow"
yl_boundary_type = "user"
yr_boundary_type = "user"


#	Parameters for initial model
#	Density, pressure, velocity and magnetic field
#	initial values on either side of the interface
rho_left	= 10000.
rho_right	= 0.1
p_left		= 10000000.
p_right		= 0.1
u_left		= 100.
u_right		= 0.
v_left		= 100.
v_right		= 0.
w_left		= 0.
w_right		= 0.
by_left		= 0.
by_right	= 1.
b_normal	= 0. #0.75


#	Angle and position of interface relative to x and y axes
#	Note: the StaggeredMesh solver only supports non-rotated setups
xangle		= 0.
yangle		= 90.
posn		= 0.5
possh		= 0.2
rx		= 1.
ry		= 1.

#	Simulation (grid, time, I/O) parameters
run_comment	= "2d Liz MHD shock tube problem, parallel to x-axis"
log_file        = "Liz_vl_hlld.log"
basenm          = "Liz_vl_hlld_"
restart         = .false.
#checkPointFileNumber=52
#plotFileNumber  = 1
nend            = 1000000
tmax            = 1.0
cfl		= 0.8
plot_var_1	= "dens"

convertToConsvdInMeshInterp = .true.
checkpointFileIntervalTime = 0.01
checkpointFileIntervalStep = 10


#	AMR parameters
#nblockx	= 1
#nblocky	= 1
lrefine_min	= 1
lrefine_max     = 6
nrefs		= 2
refine_var_1	= "dens"
eintSwitch      = 1.e-6


#	DivB control switch
killdivb	= .true.

#	Flux Conservation for AMR
flux_correct    = .true.

##-------------------------------------------------------##
##	Switches specific to the StaggeredMesh Solver    ##
order		= 2    #(first / second order scheme)
slopeLimiter    = "vanLeer" #(minmod, mc, hybrid, vanLeer)
charLimiting	= .true.
E_modification  = .true.
energyFix       = .true.

#       Riemann Solver
RiemannSolver   = "hlld"

#       CTU integrator
CTU             = .false.

#       Pure Hydro Limit
ForceHydroLimit = .false.

#       Prolongation method of Facevars
prolMethod      = "injection_prol" #(injecton_prol, balsara_prol)
##-------------------------------------------------------##


#	The parameters below are only necessary for the Uniform Grid

iGridSize	= 200	#defined as nxb * iprocs
jGridSize	= 200	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 4	#num procs in i direction
jProcs		= 1	#num procs in j direction
kProcs		= 1	#num procs in k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
