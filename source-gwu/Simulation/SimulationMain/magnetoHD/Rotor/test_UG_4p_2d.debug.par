#	Runtime parameters for the MHD Rotor problem.

#	Specific heats ratio
gamma           = 1.4


#       Grid dimensionality and geometry
geometry       = "cartesian"


#       Size of computational volume
xmin            = 0.
xmax            = 1.
ymin            = 0.
ymax            = 1.
xCtr		= 0.5
yCtr		= 0.5
zCtr		= 0.
Radius   	= 0.115


#       Boundary conditions
xl_boundary_type = "periodic"
xr_boundary_type = "periodic"
yl_boundary_type = "periodic"
yr_boundary_type = "periodic"


#       Simulation (grid, time, I/O) parameters
run_comment     = "2D MHD Rotor problem"
log_file        = "rotor_mhd_2d.log"
basenm          = "rotor_mhd_2d_"
restart         = .false.
nend = 2 #            = 1000000
tmax            = 0.15
cfl             = 0.8
plot_var_1	= "dens"
checkpointFileIntervalTime = 0.05



#	AMR parameters
#nblockx	= 1
#nblocky	= 1
lrefine_min     = 1
lrefine_max     = 6
nrefs           = 2
refine_var_1    = "dens"
refine_var_2	= "pres"
eintSwitch	= 1.e-6


#	DivB control switch
killdivb	= .true.

#	Flux Conservation for AMR
flux_correct    = .true.

## -------------------------------------------------------##
##	Switches specific to the StaggeredMesh Solver     ##
order		= 2 #(first / second order scheme)
slopeLimiter    = "vanLeer" #(minmod, mc, vanLeer, hybrid)
charLimiting	= .true.
E_modification	= .true.
energyFix	= .true.
## -------------------------------------------------------##


#	The parameters below are only necessary for the Uniform Grid

#iGridSize	= 100	#defined as nxb * iprocs
#jGridSize	= 100	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 2 	#num procs in i direction
jProcs		= 2	#num procs in j direction
kProcs		= 1	#num procs in k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
