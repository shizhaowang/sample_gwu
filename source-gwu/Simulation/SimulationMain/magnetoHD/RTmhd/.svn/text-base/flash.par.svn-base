# 	Runtime parameters for the RT MHD instability problem.
#	Please also look at default.par for more runtime parameters in the object directory

#	Specific heats ratio
# 	FLASH's default setup
#gamma		= 1.66666666666666667

#	Jim Stone's setup
gamma		= 1.4


#       Grid dimensionality and geometry
geometry	= "cartesian"


#       Size of computational volume
#	For FLASH's default RT setup
xmin		= 0.
xmax		= 0.25
ymin		= 0.
ymax		= 1. #5.0
zmin		= 0.
zmax		= 0.25


#	For Jim Stone's single-mode perturbation RT setup
#xmin		= -0.25
#xmax		=  0.25
#ymin		= -0.75
#ymax		=  0.75
#zmin		= -0.25
#zmax		=  0.25

#	For Jim Stone's multi-mode perturbation RT setup
#xmin		= -0.25
#xmax		=  0.25
#ymin		= -0.375
#ymax		=  0.375
#zmin		= -0.25
#zmax		=  0.25



#	Initial values
Bx0		= 0. #0.01
By0		= 0.
Bz0		= 0.
epsilon		= 0.025
rho_heavy	= 2.0
rho_light	= 1.0

#FLASH's default setup
gconst		= -1.

#Jim Stone's setup 
#gconst		= -0.1

gdirec		= "y"
useGravity	= .TRUE.
irenorm		= 1

#	Two choices for RT setup:
#	1 for FLASH's default
#	2 for Jim Stone's single-mode perturbation setup
#	3 for Jim Stone's multi-mode perturbation setup
simulation	= 1


#       Boundary conditions
xl_boundary_type = "periodic"
xr_boundary_type = "periodic"

# FLASH's defaults setup
#yl_boundary_type = "user"
#yr_boundary_type = "user"

# Jim Stone's setup
yl_boundary_type = "reflect"
yr_boundary_type = "reflect"

zl_boundary_type = "periodic"
zr_boundary_type = "periodic"


#       Simulation (grid, time, I/O) parameters
run_comment	= "2D RT MHD instability problem"
log_file	= "RT.log"
basenm		= "RT_"
restart         = .false.
#checkPointFileNumber=0
#plotFileNumber  = 0
nend            = 10000000

# FLASH's default
#tmax            = 2.0
# Jim Stone's setup
tmax		= 13.5
cfl             = 0.8

plot_var_1	= "dens"
plot_var_2      = "velx"
plot_var_3      = "vely"
plot_var_4      = "velz"
plot_var_5	= "eint"
plot_var_6	= "heav"

convertToConsvdInMeshInterp = .true.
checkpointFileIntervalTime = 0.1
#checkpointFileIntervalStep = 10
plotFileIntervalTime 	= 0.05

#	AMR parameters
nblockx		= 1
nblocky		= 4
nblockz		= 1
lrefine_min	= 1
lrefine_max     = 4
nrefs           = 5
refine_var_1    = "dens"
refine_var_2	= "heav"
eintSwitch	= 1.e-6


#	DivB control switch
killdivb	= .false.

#	Flux Conservation for AMR
flux_correct    = .true.



## -------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE UNSPLIT STAGGERED MESH MHD SOLVER  ##
#	I. INTERPOLATION SCHEME:
order		= 3      # Interpolation order (First/Second order)
slopeLimiter    = "mc"   # Slope limiters (minmod, mc, vanLeer, hybrid, limited)
LimitedSlopeBeta= 1.     # Slope parameter for the "limited" slope by Toro
charLimiting	= .true. # Characteristic limiting vs. Primitive limiting
use_avisc	= .true.
use_flattening	= .false.
use_steepening	= .false.

#	II. MAGNETIC(B) AND ELECTRIC(E) FIELDS:
#E_modification	= .true.           # High order algorithm for E-field construction
#energyFix	= .true.           # Update magnetic energy using staggered B-fields
#ForceHydroLimit	= .false.          # Pure Hydro Limit (B=0)
#prolMethod      = "injection_prol" # Prolongation method (injecton_prol, balsara_prol)


#	III. RIEMANN SOLVERS:
RiemannSolver	= "hllc"       # Roe, HLL, HLLC, HLLD, LF
shockInstabilityFix = .false. # Carbuncle instability fix for the Roe solver
entropy         = .false.     # Entropy fix for the Roe solver


#	IV. STRONG SHOCK HANDELING SCHEME:
shockDetect	= .false.     # Shock Detect for numerical stability
## -------------------------------------------------------------##

#	The parameters below are only necessary for the Uniform Grid
iGridSize	= 100	#defined as nxb * iprocs
jGridSize	= 400	#defined as nyb * jprocs
kGridSize	= 100	#defined as nzb * kprocs
iProcs		= 2	#number of procs in the i direction
jProcs		= 4	#number of procs in the j direction
kProcs		= 1	#number of procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
