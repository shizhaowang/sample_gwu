# 	Runtime parameters for the RT MHD instability problem.
#	Please also look at default.par for more runtime parameters in the object directory

#	Specific heats ratio
# 	FLASH's default setup
gamma		= 1.66666666666666667


#       Grid dimensionality and geometry
geometry	= "cartesian"


#       Size of computational volume
#	For FLASH's default RT setup
xmin		= 0.
xmax		= 0.25
ymin		= 0.
ymax		= 5.0
zmin		= 0.
zmax		= 0.25


#	Initial values
Bx0		= 0. #0.01
By0		= 0.
Bz0		= 0.
epsilon		= 0.025
rho_heavy	= 2.0
rho_light	= 1.0

gconst		= -1. #FLASH's default setup
gdirec		= "y"
useGravity	= .TRUE.
irenorm		= 1

#	Two choices for RT setup
simulation	= 1 #1 for FLASH's default; 2 for Jim Stone's setup


#       Boundary conditions
xl_boundary_type = "periodic"
xr_boundary_type = "periodic"

yl_boundary_type = "user"
yr_boundary_type = "user"

zl_boundary_type = "periodic"
zr_boundary_type = "periodic"


#       Simulation (grid, time, I/O) parameters
run_comment	= "2D RT MHD instability problem"
log_file	= "RT.log"
basenm		= "RT_"
restart         = .false.
#checkPointFileNumber=0
#plotFileNumber  = 0
nend            = 10000000

tmax            = 2.0
cfl             = 0.8

plot_var_1	= "dens"
plot_var_2      = "velx"
plot_var_3      = "vely"
plot_var_4      = "velz"
plot_var_5	= "eint"
plot_var_6	= "heav"

convertToConsvdInMeshInterp = .true.
checkpointFileIntervalTime = 0.1
#checkpointFileIntervalStep = 10
#plotFileIntervalTime 	= 0.02

#	AMR parameters
nblockx		= 1
nblocky		= 20
nblockz		= 1
lrefine_min	= 1
lrefine_max     = 5
nrefs           = 5
refine_var_1    = "dens"
refine_var_2	= "heav"
eintSwitch	= 1.e-6


#	DivB control switch
killdivb	= .true.

#	Flux Conservation for AMR
flux_correct    = .true.


## -------------------------------------------------------##
##	Switches specific to the StaggeredMesh Solver     ##
order		= 2 #(first / second order scheme)
facevar2ndOrder	= .false.
slopeLimiter    = "mc" #(minmod, mc, vanLeer, hybrid, limited)
LimitedSlopeBeta= 1.   # only needed for the limited slope by Toro
charLimiting	= .true.
E_modification	= .true.
energyFix	= .false.


#	Riemann solver
RiemannSolver	= "roe"
#entropy	= .true.

#	CTU integrator
CTU		= .false.

#	Pure Hydro Limit
ForceHydroLimit	= .false.

#        Prolongation method of Facevars
prolMethod      = "injection_prol" #(injecton_prol, balsara_prol)
## -------------------------------------------------------##


#	The parameters below are only necessary for the Uniform Grid
iGridSize	= 200	#defined as nxb * iprocs
jGridSize	= 600	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 2	#number of procs in the i direction
jProcs		= 2	#number of procs in the j direction
kProcs		= 1	#number of procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
