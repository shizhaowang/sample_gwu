# 	Runtime parameters for the Taylor-Green Vortex problem.

# Example setup:
# ./setup INavierStokes/2D/TaylorGreenVortex -2d -auto +ug -nxb=64 -nyb=32 -debug -objdir=TAYLOR_GREEN_PFFT -site=...

gr_pmRpDivergenceFree = 1
gr_pmRpNfieldDivf = 2
gr_pmRpConsvFluxes = .TRUE.
gr_pmRpConsvFluxDensities = .FALSE.

# Inverse of Reynolds Number
invRe           = 1.

# Subgrid Scale model flag (0 no sgs model, 1 sgs model)
isgs            = 0

#       Grid dimensionality and geometry
geometry	= "cartesian"


#       Size of computational volume
xmin		=  0.000000000000000
xmax		=  6.283185307179586
ymin		=  0.000000000000000
ymax		=  6.283185307179586




#       Boundary conditions
xl_boundary_type = "periodic"
xr_boundary_type = "periodic"
yl_boundary_type = "periodic"
yr_boundary_type = "periodic"

#      Poisson Solver Boundary Conditions
xl_mg_boundary_type = "periodic"
xr_mg_boundary_type = "periodic"
yl_mg_boundary_type = "periodic"
yr_mg_boundary_type = "periodic"


#       Simulation (grid, time, I/O) parameters
run_comment	= "2D Taylor-Green Vortex problem"
log_file	= "INS_Taylor_Green.log"
basenm		= "INS_Taylor_Green_"
restart         = .false.
#checkPointFileNumber=1
#plotFileNumber  = 1
nend            = 1000
tmax            = 300. 
cflflg          = 0
cfl             = 0.3
sigma		= 0.2
dtspec          = 1.e-5
dtinit          = 1.e-5
tstep_change_factor = 1.

#Integration Scheme:
intschm            = 2

plot_var_1	= "pres"

pfft_setupOnce  = .false.
convertToConsvdInMeshInterp = .true.

checkpointFileIntervalTime = 5.
checkpointFileIntervalStep = 2000

plotFileIntervalTime = 5.
plotFileIntervalStep = 100


#	AMR parameters
#nblockx	= 1
#nblocky	= 1
lrefine_min	= 1
lrefine_max     = 1
nrefs           = 1
refine_var_1    = "pres"


#	Flux Conservation for AMR
flux_correct    = .true.

## Pfft Parameters:
## Use Central Finite Difference discretization operator:
gr_pfftDiffOpDiscretize = 2
gr_mgDiffOpDiscretize   = 2


#-------WARNING: ONLY FOR UNIFORM GRID !!! ------------------------
#	The parameters below are only necessary for the Uniform Grid
#iGridSize	= 8	#defined as nxb * iprocs
#jGridSize	= 8	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 1	#number of procs in the i direction
jProcs		= 2	#number of procs in the j direction
kProcs		= 1	#number of procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
