# 	Runtime parameters for the Surface Tension Bubble problem.

# Inverse of Reynolds Number
invRe           = .01

# Subgrid Scale model flag (0 no sgs model, 1 sgs model)
isgs            = 0

#       Grid dimensionality and geometry
geometry	= "cartesian"


#       Size of computational volume
xmin		=  0.000000000000000
xmax		=  1.0
ymin		=  0.000000000000000
ymax		=  1.0


# Densities
rho1  = 1.0
rho2  = 1.0

# Viscosities
vis1 = 1.0
vis2 = 1.0

# Number of level-set redistancing iterations
lsit = 2

#       Boundary conditions
#xl_boundary_type = "noslip_ins"
#xr_boundary_type = "noslip_ins"
#yl_boundary_type = "noslip_ins"
#yr_boundary_type = "noslip_ins"

xl_boundary_type = "periodic"
xr_boundary_type = "periodic"
yl_boundary_type = "periodic"
yr_boundary_type = "periodic"

#       Simulation (grid, time, I/O) parameters
run_comment	= "2D Elliptical bubble run."
log_file	= "VARDENS_EllipticalBub.log"
basenm		= "VARDENS_Ellipticalbub_"
restart         = .false.
#checkPointFileNumber=1
#plotFileNumber  = 1
nend            = 10000
tmax            = 100. 
cflflg          = 1
#cfl             = 0.3
#sigma		= 0.2
cfl             = 0.0025
sigma		= 0.0025
dtspec          = 1.e-5

#Integration Scheme:
intschm            = 2

plot_var_1	= "pres"

pfft_setupOnce  = .false.
convertToConsvdInMeshInterp = .true.
checkpointFileIntervalTime = 5.
checkpointFileIntervalStep = 500


#	AMR parameters
#nblockx	= 1
#nblocky	= 1
lrefine_min	= 1
lrefine_max     = 1
nrefs           = 1
refine_var_1    = "pres"
#	Flux Conservation for AMR
flux_correct    = .true.


# Pfft Parameters:
# Use Central Finite Difference discretization operator:
gr_pfftDiffOpDiscretize = 2


#-------WARNING: ONLY FOR UNIFORM GRID !!! ------------------------
#	The parameters below are only necessary for the Uniform Grid
#iGridSize	= 8	#defined as nxb * iprocs
#jGridSize	= 8	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 1	#number of procs in the i direction
jProcs		= 1	#number of procs in the j direction
kProcs		= 1	#number of procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
