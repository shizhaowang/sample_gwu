# 	Runtime parameters for the Laminar Channel problem.

# Inverse of Reynolds Number
invRe           = 1.e-2

# Subgrid Scale model flag (0 no sgs model, 1 sgs model)
isgs            = 0

#       Grid dimensionality and geometry
geometry	= "cartesian"


#       Size of computational volume
xmin		=  0.00000000000000
xmax		=  20.0000000000000
ymin		= -4.00000000000000
ymax		=  4.00000000000000
zmin		= -1.00000000000000
zmax		=  1.00000000000000



#       Boundary conditions
xl_boundary_type = "periodic"
xr_boundary_type = "periodic"
yl_boundary_type = "slip_ins"
yr_boundary_type = "slip_ins"
zl_boundary_type = "noslip_ins"
zr_boundary_type = "noslip_ins"


#       Simulation (grid, time, I/O) parameters
run_comment	= "3D INS-Laminar Channel problem"
log_file	= "INS_Lam_Chan.log"
basenm		= "INS_Lam_Chan_"
restart         = .false.

#checkPointFileNumber=1
#plotFileNumber  = 1


# Time Integration Options:
nend            = 10000000
tmax            = 300 
cflflg =    1  # if 1 run at constant CFL, if 0 constant timestep
cfl    = 0.35
sigma  = 0.25
dtspec =0.001

#Integration Scheme:
intschm            = 2


plot_var_1	= "pres"

pfft_setupOnce  = .false.
convertToConsvdInMeshInterp = .true.

checkpointFileIntervalTime = 1.5
checkpointFileIntervalStep = 300

plotFileIntervalTime = 1.5
plotFileIntervalStep = 300


#	AMR parameters
#nblockx	= 1
#nblocky	= 1
lrefine_min	= 1
lrefine_max     = 1
nrefs           = 1
refine_var_1    = "pres"


#	Flux Conservation for AMR
flux_correct    = .true.

# Multigrid Convergence tolerance
# Rickers Multigrid HG:
mg_maxResidualNorm = 1.e-10


# Multigrid Convergence tolerance
mgrid_npresmooth = 1
mgrid_npossmooth = 8
mgrid_print_norm = .true.
mgrid_max_residual_norm = 1.e-10
mgrid_max_vcycles = 20

# BiPCGStab Parameters:
bipcgs_max_residual_norm = 1.e-10
bipcgs_max_cycles = 1000
bipcgs_print_norm = .true.

# Force Direct solve in this level:
#maxDirectSolveLevel=2

# Pfft Parameters:
# Use Central Finite Difference discretization operator:
gr_pfftDiffOpDiscretize = 2
gr_mgDiffOpDiscretize   = 2


#-------WARNING: ONLY FOR UNIFORM GRID !!! ------------------------
#	The parameters below are only necessary for the Uniform Grid
#iGridSize	= 8	#defined as nxb * iprocs
#jGridSize	= 8	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 1	#number of procs in the i direction
jProcs		= 1	#number of procs in the j direction
kProcs		= 1	#number of procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
