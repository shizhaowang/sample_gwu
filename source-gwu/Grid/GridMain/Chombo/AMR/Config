#Config file for Grid/GridMain/paramesh

# Requires use of the Grid SetupVariable
USESETUPVARS Grid

IF Grid not in ["","Chombo"]
   SETUPERROR The setup variable 'Grid' is set to something other than "Chombo"
ENDIF

CONFLICTS IO/IOMain/hdf5/parallel/UG
CONFLICTS IO/IOMain/hdf5/serial/UG

# Add a mesh variable that represents whether each cell in
# a block is tagged for refinement.  A non-zero value
# indicates that a cell is tagged.
SCRATCHCENTERVAR tagc

# Lines that begin with 'D' as in 'Description' will end up as
# comment lines in the setup_params file.  setup_params is
# written by the setup script and holds all the default 
# values of parameters.  

# !!! If you add a parameter, please add a description line
# Format is D <parameter name> <description>

D iGridSize Global number of interior cells in the i direction
PARAMETER iGridSize INTEGER 16 [1 ... ]

D jGridSize Global number of interior cells in the j direction
PARAMETER jGridSize INTEGER 16 [1 ... ]

D kGridSize Global number of interior cells in the k direction
PARAMETER kGridSize INTEGER 16 [1 ... ]

D The maximum block size along any dimension.
D In Chombo terminology this is the maximum size of a grid.
D This parameter sets the argument a_maxSize of BRMeshRefine::define.
D An input value of 0 means there will be no limit.
PARAMETER maxBlockSize INTEGER 16 [0 ... ]

D The argument a_fillRatio of BRMeshRefine::define.
PARAMETER BRMeshRefineFillRatio REAL 0.75 [ 0.0 ... 1.0 ]

D The argument a_bufferSize of BRMeshRefine::define.
PARAMETER BRMeshRefineBufferSize INTEGER 1 [ 0 ... ]

D The argument a_blockFactor of BRMeshRefine::define.
PARAMETER BRMeshRefineBlockFactor INTEGER 8 [ 1 ... ]

D The radius of cells around a tagged cell that should also be tagged, 
D i.e. marked for refinement
PARAMETER tagRadius INTEGER 2 [ 0 ... ]

D lrefine_max maximum AMR refinement level
PARAMETER lrefine_max   INTEGER 1 [ 1 ... ]

D QuadCFInterp Whether to use quadratic coarse-fine boundary interpolation.
D It is used if TRUE, otherwise piecewise linear interpolation is used for
D the boundary interpolation.  One limitation of QuadCFInterp is that it
D only fills face guardcells, and so it is probably not useful for FLASH.
PARAMETER QuadCFInterp  BOOLEAN  False

D refRatio The integer refinement jump between levels
PARAMETER refRatio  INTEGER 2 [ 0 ... ]

D restrictBeforeGhostExchange Whether to restrict all data before
D exchanging guard cells.  This is a temporary option that is just
D here for copmpatibility with Paramesh.
PARAMETER restrictBeforeGhostExchange BOOLEAN True

D lrefine_min minimum AMR refinement level
PARAMETER lrefine_min   INTEGER 1 [ 1 ]

D nrefs refine/derefine AMR grid every nrefs timesteps
PARAMETER nrefs         INTEGER 2
                                        
D refine_var_count count of maximum allowed variable to be used
D as refinement criterion
PARAMETER refine_var_count INTEGER 4

D refine_var_1 indicates 1st variable on which to refine
PARAMETER refine_var_1 STRING "none"

D refine_cutoff_1 threshold value to trigger refinement for refine_var_1
PARAMETER refine_cutoff_1 REAL 0.8

D derefine_cutoff_1 threshold value to trigger derefinement for refine_var_1
PARAMETER derefine_cutoff_1 REAL 0.2

D refine_filter_1 prevents error calculations to determine refinement from diverging numerically for refine_var_1
PARAMETER refine_filter_1 REAL 0.01



D refine_var_2 indicates 2nd variable on which to refine
PARAMETER refine_var_2 STRING "none"

D refine_cutoff_2 threshold value to trigger refinement for refine_var_2
PARAMETER refine_cutoff_2 REAL 0.8

D derefine_cutoff_2 threshold value to trigger derefinement for refine_var_2
PARAMETER derefine_cutoff_2 REAL 0.2

D refine_filter_2 prevents error calculations to determine refinement from diverging numerically for refine_var_1
PARAMETER refine_filter_2 REAL 0.01


D refine_var_3 indicates 3rd variable on which to refine
PARAMETER refine_var_3 STRING "none"

D refine_cutoff_3 threshold value to trigger refinement for refine_var_3
PARAMETER refine_cutoff_3 REAL 0.8

D derefine_cutoff_3 threshold value to trigger derefinement for refine_var_3
PARAMETER derefine_cutoff_3 REAL 0.2

D refine_filter_3 prevents error calculations to determine refinement from diverging numerically for refine_var_3
PARAMETER refine_filter_3 REAL 0.01

D refine_var_4 indicates 4th variable on which to refine
PARAMETER refine_var_4 STRING "none"

D refine_cutoff_4 threshold value to trigger refinement for refine_var_4
PARAMETER refine_cutoff_4 REAL 0.8

D derefine_cutoff_4 threshold value to trigger derefinement for refine_var_4
PARAMETER derefine_cutoff_4 REAL 0.2

D refine_filter_4 prevents error calculations to determine refinement from diverging numerically for refine_var_4
PARAMETER refine_filter_4 REAL 0.01

D refine_on_particle_count if true, the count of particles in blocks act as a refinement criterion
PARAMETER refine_on_particle_count BOOLEAN FALSE

D max_particles_per_blk   integer  if the number of particles in a block exceeds this, it must refine  when particle count is a refinement criterion
PARAMETER max_particles_per_blk INTEGER 100

D min_particles_per_blk   integer  if the number of particles in a block is below this, it must derefine when particle count is a refinement criterion
PARAMETER min_particles_per_blk INTEGER 1

D flux_correct turns on or off flux correction
PARAMETER flux_correct BOOLEAN true

D small             Cutoff value ... DEV: for what?
PARAMETER small		REAL	1.E-10

D smlrho            Cutoff value for density	
PARAMETER smlrho	REAL	1.E-10	

D smallp            Cutoff value for pressure
PARAMETER smallp	REAL	1.E-10	

D smallt            Cutoff value for temperature
PARAMETER smallt	REAL	1.E-10	

D smallu            Cutoff value for velocity
PARAMETER smallu	REAL	1.E-10	

D interpol_order  the default interpolation order when using
D & "monotonic" interpolation routines
PARAMETER interpol_order  INTEGER  2   [0,1,2]

D convertToConsvdForMeshCalls indicates if appropriate variables are
D & converted from primitive to conserved form during propagation
D & before control is passed to Chombo for refinement, derefinement,
D & or guardcell filling.
PARAMETER convertToConsvdForMeshCalls BOOLEAN TRUE

D convertToConsvdInMeshInterp indicates if appropriate variables are
D & converted to conserved form during propagation within the interpolation
D & routines invoked by Chombo.  This applies to interpolation (both
D & "prolongation" and "restriction") in the course of refinement, 
D & derefinement, or guardcell filling.  This is not yet implemented, 
D & but needs to get implemented soon because manually converting
D & in several different FLASH Fortran Grid leads to the possibility
D & of overlooking at least one FLASH Fortran Grid subroutine.
PARAMETER convertToConsvdInMeshInterp BOOLEAN FALSE

D earlyBlockDistAdjustment If true, let Paramesh redistribute blocks
D & across processors early, so that the block distribution chosen by
D & Paramesh will be in effect when time evolution begins after restart.
D & If earlyBlockDistAdjustment is false, the block distribution enacted
D & by the IO unit when it read a checkpoint file will normally still be
D & in effect when time evolution begins after a restart.
D & This flag is ignored if not restarting from a checkpoint.
PARAMETER earlyBlockDistAdjustment BOOLEAN TRUE

D lrefine_del Try to reduce the maximum refinement level by this number
D & of levels on a restart.
PARAMETER lrefine_del INTEGER 0 [ 0 ... ]

D gr_lrefineMaxRedDoByLogR Softly force effectively a lower lrefine_max
D & depending on distance from center. See gr_lrefineMaxRedRadiusFact.
PARAMETER gr_lrefineMaxRedDoByLogR BOOLEAN FALSE

D gr_lrefineMaxRedRadiusFact factor that determines a minimum resolution
D & (and thus maximum refinement level) based on distance from a center.
D & See x_refine_center, y_refine_center, z_refine_center for the center
D & coordinates.  This is approximately (linearly) equivalent to requiring
D & a minimum *angular* resolution, within the limits set by the global
D & lrefine_min and lrefine_max.  Only used when gr_lrefineMaxRedDoByLogR
D & is TRUE.
PARAMETER gr_lrefineMaxRedRadiusFact REAL 0.0 [ 0.0 ... ]

D x_refine_center First coordinate of center for distance-based refinement patterns
D y_refine_center Second coordinate of center for distance-based refinement patterns
D z_refine_center Third coordinate of center for distance-based refinement patterns
PARAMETER x_refine_center REAL 0.0
PARAMETER y_refine_center REAL 0.0
PARAMETER z_refine_center REAL 0.0

D gr_lrefineMaxRedDoByTime Lower the effective lrefine_max as a function of time.
D & See runtime parameters gr_lrefineMaxRedTRef, gr_lrefineMaxRedTimeScale,
D & and gr_lrefineMaxRedLogBase.
PARAMETER gr_lrefineMaxRedDoByTime BOOLEAN FALSE

D gr_lrefineMaxRedTimeScale the time scale for effectively lowering lrefine_max:
D & The first reduction takes place at t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale.
PARAMETER gr_lrefineMaxRedTimeScale REAL 1.0	[ TINY ... ]

D	 gr_lrefineMaxRedTRef reference time for time-based max level reduction.
D & The effective reduction of lrefine_max only kicks in for times greater than
D & gr_lrefineMaxRedTRef. The first time lrefine_max is effectively
D & lowered actually happens at t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale.
PARAMETER gr_lrefineMaxRedTRef	REAL	0.0

D	 gr_lrefineMaxRedLogBase Logarithm base for determining when repeated
D & reductions in effective lrefine_max should happen. The nth reduction will
D & happen at 
D & t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale*gr_lrefineMaxRedLogBase**(n-1).
PARAMETER gr_lrefineMaxRedLogBase	REAL	10.0	[ 1.0 ... ]


D enableMaskedGCFill When enableMaskedGCFill is FALSE, Grid_fillGuardCells is forced
D &                  to always ignore optional mask arguments when present in calls.
D &                  This is the default behavior.
D &                  Set enableMaskedGCFill TRUE to enable masked guard cell filling.
PARAMETER enableMaskedGCFill BOOLEAN FALSE
